{"remainingRequest":"/Users/linghao/Documents/myvue/node_modules/babel-loader/lib/index.js!/Users/linghao/Documents/myvue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/linghao/Documents/myvue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/linghao/Documents/myvue/src/views/index/register.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/linghao/Documents/myvue/src/views/index/register.vue","mtime":1610172479978},{"path":"/Users/linghao/Documents/myvue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/linghao/Documents/myvue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/linghao/Documents/myvue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/linghao/Documents/myvue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFZlcmlmaWNhdGlvbkNvZGUgZnJvbSAiLi92ZXJpZmljYXRpb25Db2RlIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJyZWdpc3RlciIsCiAgY29tcG9uZW50czogewogICAgVmVyaWZpY2F0aW9uQ29kZTogVmVyaWZpY2F0aW9uQ29kZQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHJlZ2lzdGVyRm9ybTogdGhpcy4kZm9ybS5jcmVhdGVGb3JtKHRoaXMsIHsKICAgICAgICBuYW1lOiAicmVnaXN0ZXJfZm9ybSIKICAgICAgfSksCiAgICAgIHBhc3N3b3JkOiAiIiwKICAgICAgaWRlbnRpZnlDb2RlOiAiIiwKICAgICAgaWRlbnRpZnlDb2RlczogIjEyMzQ1Njc4OTBhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5eiIsCiAgICAgIGRpc2FibGU6IGZhbHNlCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuaWRlbnRpZnlDb2RlID0gIiI7CiAgICB0aGlzLm1ha2VDb2RlKHRoaXMuaWRlbnRpZnlDb2RlcywgNCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyDms6jlhowKICAgIHJlZ2lzdGVyOiBmdW5jdGlvbiByZWdpc3RlcihlKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBlLnByZXZlbnREZWZhdWx0KCk7CiAgICAgIHRoaXMucmVnaXN0ZXJGb3JtLnZhbGlkYXRlRmllbGRzKGZ1bmN0aW9uIChlcnIsIHZhbHVlcykgewogICAgICAgIGlmICghZXJyKSB7CiAgICAgICAgICBfdGhpcy5Qb3N0KCIvcmVnaXN0ZXIiLCB7CiAgICAgICAgICAgIHVzZXJuYW1lOiB2YWx1ZXNbJ3VzZXJuYW1lJ10sCiAgICAgICAgICAgIHBhc3N3b3JkOiB2YWx1ZXNbJ3Bhc3N3b3JkJ10KICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgICByZXNbJ2NvZGUnXSA9PT0gMTAwMCA/IF90aGlzLiRtZXNzYWdlLnN1Y2Nlc3MocmVzWyJtZXNzYWdlIl0sIDEsIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICBfdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgICAgICAgICAgbmFtZTogImxvZ2luIgogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9KSA6IF90aGlzLiRtZXNzYWdlLmVycm9yKHJlc1snbWVzc2FnZSddKTsKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgLy8g6I635Y+W5a+G56CBCiAgICBzZXRQYXNzd29yZDogZnVuY3Rpb24gc2V0UGFzc3dvcmQocnVsZXMsIHZhbHVlLCBjYWxsYmFjaykgewogICAgICB0aGlzLnBhc3N3b3JkID0gdmFsdWU7CiAgICAgIGNhbGxiYWNrKCk7CiAgICB9LAogICAgLy8g5qCh6aqM5Lik5qyh5a+G56CBCiAgICBjb25maXJtUHdkOiBmdW5jdGlvbiBjb25maXJtUHdkKHJ1bGVzLCB2YWx1ZSwgY2FsbGJhY2spIHsKICAgICAgdmFsdWUgJiYgdGhpcy5wYXNzd29yZCAhPT0gdmFsdWUgPyBjYWxsYmFjaygi5Lik5qyh5a+G56CB5LiN5LiA6Ie0IikgOiBjYWxsYmFjaygpOwogICAgfSwKICAgIC8vIOagoemqjOWbvuW9oumqjOivgeeggQogICAgY29uZmlybUNvZGU6IGZ1bmN0aW9uIGNvbmZpcm1Db2RlKHJ1bGVzLCB2YWx1ZSwgY2FsbGJhY2spIHsKICAgICAgdmFsdWUgJiYgdGhpcy5pZGVudGlmeUNvZGUgIT09IHZhbHVlID8gY2FsbGJhY2soIumqjOivgeeggemUmeivryIpIDogY2FsbGJhY2soKTsKICAgIH0sCiAgICAvLyDliLfmlrDlm77lvaLpqozor4HnoIEKICAgIHJlZnJlc2hDb2RlOiBmdW5jdGlvbiByZWZyZXNoQ29kZSgpIHsKICAgICAgdGhpcy5pZGVudGlmeUNvZGUgPSAiIjsKICAgICAgdGhpcy5tYWtlQ29kZSh0aGlzLmlkZW50aWZ5Q29kZXMsIDQpOwogICAgfSwKICAgIC8vIOeUn+aIkOmaj+acuuaVsAogICAgcmFuZG9tTnVtOiBmdW5jdGlvbiByYW5kb21OdW0obWluLCBtYXgpIHsKICAgICAgbWF4ID0gbWF4ICsgMTsKICAgICAgcmV0dXJuIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIChtYXggLSBtaW4pICsgbWluKTsKICAgIH0sCiAgICAvLyDnlJ/miJDpmo/mnLrlm77lvaLpqozor4HnoIEKICAgIG1ha2VDb2RlOiBmdW5jdGlvbiBtYWtlQ29kZShkYXRhLCBsZW4pIHsKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47IGkrKykgewogICAgICAgIHRoaXMuaWRlbnRpZnlDb2RlICs9IGRhdGFbdGhpcy5yYW5kb21OdW0oMCwgZGF0YS5sZW5ndGggLSAxKV07CiAgICAgIH0KICAgIH0KICB9Cn07"},{"version":3,"sources":["register.vue"],"names":[],"mappings":"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","sourcesContent":["* @Author: hao.ling\n* @Date: 2020/12/6 2:29 下午\n* @Explanation: 注册页\n<template>\n    <div id=\"register\">\n        <h1 align=\"center\">注册</h1>\n        <a-form :form=\"registerForm\" @submit=\"register\" :labelCol=\"{span:7}\">\n            <a-form-item label=\"用户名\" class=\"register-form-item\" style=\"margin-bottom: 5px\">\n                <a-input class=\"input\" placeholder=\"请输入用户名\" size=\"small\"\n                         v-decorator=\"['username',{rules:[{required:true,message:'请输入用户名'}]}]\">\n                    <my-icon slot=\"prefix\" type=\"icon-user\" class=\"icon\"/>\n                </a-input>\n            </a-form-item>\n            <a-form-item label=\"密码\" class=\"register-form-item\" style=\"margin-bottom: 5px\">\n                <a-input-password class=\"input\" placeholder=\"请输入密码\" size=\"small\"\n                                  v-decorator=\"['password',{rules:[{required:true,message:'请输入密码'},{validator:setPassword}]}]\">\n                    <my-icon slot=\"prefix\" type=\"icon-password\" class=\"icon\"/>\n                </a-input-password>\n            </a-form-item>\n            <a-form-item label=\"确认密码\" class=\"register-form-item\" style=\"margin-bottom: 5px\">\n                <a-input-password class=\"input\" size=\"small\" placeholder=\"请确认密码\"\n                                  v-decorator=\"['confirmPwd',{rules:[{required:true,message:'请确认密码'},{validator:confirmPwd}]}]\">\n                    <my-icon slot=\"prefix\" type=\"icon-password\" class=\"icon\"/>\n                </a-input-password>\n            </a-form-item>\n            <a-form-item label=\"验证码\" class=\"code-form-item\" style=\"margin-bottom: 5px\">\n                <a-input size=\"small\" placeholder=\"验证码\" style=\"width: 100px;z-index: 50\"\n                         v-decorator=\"['code',{rules:[{required:true,message:'请输入验证码'},{validator:confirmCode}]}]\">\n                    <my-icon slot=\"prefix\" type=\"icon-yanzhengma\" class=\"icon\"/>\n                </a-input>\n                <div @click=\"refreshCode\" style=\"margin-left: 210px;margin-top: -40px;width: 120px;margin-right: 220px\">\n                    <verification-code :identifyCode=\"identifyCode\" style=\"cursor: pointer\"/>\n                </div>\n            </a-form-item>\n            <a-button type=\"primary\" class=\"btn\" style=\"margin-left: 120px\" :disabled=\"disable\">\n                <router-link :to=\"{name:'login'}\">登录</router-link>\n            </a-button>\n            <a-button type=\"primary\" class=\"btn\" @click=\"register\" :disabled=\"disable\">注册</a-button>\n        </a-form>\n    </div>\n</template>\n\n<script>\n    import VerificationCode from \"./verificationCode\";\n\n    export default {\n        name: \"register\",\n        components: {VerificationCode},\n        data() {\n            return {\n                registerForm: this.$form.createForm(this, {name: \"register_form\"}),\n                password: \"\",\n                identifyCode: \"\",\n                identifyCodes: \"1234567890abcdefghijklmnopqrstuvwxyz\",\n                disable: false\n            }\n        },\n        mounted() {\n            this.identifyCode = \"\"\n            this.makeCode(this.identifyCodes, 4)\n        },\n        methods: {\n            // 注册\n            register(e) {\n                e.preventDefault()\n                this.registerForm.validateFields((err, values) => {\n                    if (!err) {\n                        this.Post(\"/register\", {\n                            username: values['username'],\n                            password: values['password']\n                        }).then(res => {\n                            res['code'] === 1000 ? this.$message.success(res[\"message\"], 1, () => {\n                                this.$router.push({name: \"login\"})\n                            }) : this.$message.error(res['message'])\n                        })\n                    }\n                })\n            },\n            // 获取密码\n            setPassword(rules, value, callback) {\n                this.password = value\n                callback()\n            },\n            // 校验两次密码\n            confirmPwd(rules, value, callback) {\n                value && this.password !== value ? callback(\"两次密码不一致\") : callback()\n            },\n            // 校验图形验证码\n            confirmCode(rules, value, callback) {\n                value && this.identifyCode !== value ? callback(\"验证码错误\") : callback()\n            },\n            // 刷新图形验证码\n            refreshCode() {\n                this.identifyCode = \"\"\n                this.makeCode(this.identifyCodes, 4)\n            },\n            // 生成随机数\n            randomNum(min, max) {\n                max = max + 1\n                return Math.floor(Math.random() * (max - min) + min)\n            },\n            // 生成随机图形验证码\n            makeCode(data, len) {\n                for (let i = 0; i < len; i++) {\n                    this.identifyCode += data[this.randomNum(0, data.length - 1)]\n                }\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    #register {\n        margin-top: 120px;\n        margin-left: 500px;\n        padding-top: 20px;\n        height: 350px;\n        width: 420px;\n        background-color: white;\n        border-radius: 20px;\n    }\n\n    .input {\n        width: 200px;\n    }\n\n    .icon {\n        margin-left: -2px;\n        font-size: 16px;\n    }\n\n    .btn {\n        margin-top: 10px;\n        margin-right: 30px;\n    }\n</style>\n<style>\n    .register-form-item .ant-form-explain {\n        margin-bottom: -20px;\n        margin-left: 125px;\n    }\n\n    .code-form-item .ant-form-explain {\n        margin-left: 125px;\n        margin-top: -30px;\n        z-index: 50;\n    }\n</style>"],"sourceRoot":"src/views/index"}]}