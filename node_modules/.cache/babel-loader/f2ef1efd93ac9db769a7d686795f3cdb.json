{"remainingRequest":"/Users/linghao/Documents/myvue/node_modules/babel-loader/lib/index.js!/Users/linghao/Documents/myvue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/linghao/Documents/myvue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/linghao/Documents/myvue/src/views/home/change.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/linghao/Documents/myvue/src/views/home/change.vue","mtime":1610172592277},{"path":"/Users/linghao/Documents/myvue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/linghao/Documents/myvue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/linghao/Documents/myvue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/linghao/Documents/myvue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFZlcmlmaWNhdGlvbkNvZGUgZnJvbSAiLi4vaW5kZXgvdmVyaWZpY2F0aW9uQ29kZSI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiY2hhbmdlIiwKICBjb21wb25lbnRzOiB7CiAgICBWZXJpZmljYXRpb25Db2RlOiBWZXJpZmljYXRpb25Db2RlCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZWRpdF9mb3JtOiB0aGlzLiRmb3JtLmNyZWF0ZUZvcm0odGhpcywgewogICAgICAgIG5hbWU6ICJlZGl0Rm9ybSIKICAgICAgfSksCiAgICAgIGlkZW50aWZ5Q29kZTogIiIsCiAgICAgIGlkZW50aWZ5Q29kZXM6ICIxMjM0NTY3ODkwYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXoiCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuaWRlbnRpZnlDb2RlID0gIiI7CiAgICB0aGlzLm1ha2VDb2RlKHRoaXMuaWRlbnRpZnlDb2RlcywgNCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyDojrflj5blr4bnoIEKICAgIHNldFBhc3N3b3JkOiBmdW5jdGlvbiBzZXRQYXNzd29yZChydWxlcywgdmFsdWUsIGNhbGxiYWNrKSB7CiAgICAgIHRoaXMucGFzc3dvcmQgPSB2YWx1ZTsKICAgICAgY2FsbGJhY2soKTsKICAgIH0sCiAgICAvLyDmoKHpqozkuKTmrKHlr4bnoIEKICAgIGNvbmZpcm1Qd2Q6IGZ1bmN0aW9uIGNvbmZpcm1Qd2QocnVsZXMsIHZhbHVlLCBjYWxsYmFjaykgewogICAgICB2YWx1ZSAmJiB0aGlzLnBhc3N3b3JkICE9PSB2YWx1ZSA/IGNhbGxiYWNrKCLkuKTmrKHlr4bnoIHkuI3kuIDoh7QiKSA6IGNhbGxiYWNrKCk7CiAgICB9LAogICAgLy8g5qCh6aqM5Zu+5b2i6aqM6K+B56CBCiAgICBjb25maXJtQ29kZTogZnVuY3Rpb24gY29uZmlybUNvZGUocnVsZXMsIHZhbHVlLCBjYWxsYmFjaykgewogICAgICB2YWx1ZSAmJiB0aGlzLmlkZW50aWZ5Q29kZSAhPT0gdmFsdWUgPyBjYWxsYmFjaygi6aqM6K+B56CB6ZSZ6K+vIikgOiBjYWxsYmFjaygpOwogICAgfSwKICAgIC8vIOWIt+aWsOWbvuW9oumqjOivgeeggQogICAgcmVmcmVzaENvZGU6IGZ1bmN0aW9uIHJlZnJlc2hDb2RlKCkgewogICAgICB0aGlzLmlkZW50aWZ5Q29kZSA9ICIiOwogICAgICB0aGlzLm1ha2VDb2RlKHRoaXMuaWRlbnRpZnlDb2RlcywgNCk7CiAgICB9LAogICAgLy8g55Sf5oiQ6ZqP5py65pWwCiAgICByYW5kb21OdW06IGZ1bmN0aW9uIHJhbmRvbU51bShtaW4sIG1heCkgewogICAgICBtYXggPSBtYXggKyAxOwogICAgICByZXR1cm4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKG1heCAtIG1pbikgKyBtaW4pOwogICAgfSwKICAgIC8vIOeUn+aIkOmaj+acuuWbvuW9oumqjOivgeeggQogICAgbWFrZUNvZGU6IGZ1bmN0aW9uIG1ha2VDb2RlKGRhdGEsIGxlbikgewogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSsrKSB7CiAgICAgICAgdGhpcy5pZGVudGlmeUNvZGUgKz0gZGF0YVt0aGlzLnJhbmRvbU51bSgwLCBkYXRhLmxlbmd0aCAtIDEpXTsKICAgICAgfQogICAgfSwKICAgIC8vIOS/ruaUueWvhueggQogICAgY2hhbmdlUHdkOiBmdW5jdGlvbiBjaGFuZ2VQd2QoZSkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOwogICAgICB0aGlzLmVkaXRfZm9ybS52YWxpZGF0ZUZpZWxkcyhmdW5jdGlvbiAoZXJyLCB2YWx1ZSkgewogICAgICAgIGlmICghZXJyKSB7CiAgICAgICAgICBfdGhpcy5Qb3N0KCIvY2hhbmdlUHdkIiwgewogICAgICAgICAgICB1c2VybmFtZTogX3RoaXMuZ2V0Q29va2llKCJ1c2VybmFtZSIpLAogICAgICAgICAgICBvbGRQd2Q6IHZhbHVlWydvbGRfcGFzc3dvcmQnXSwKICAgICAgICAgICAgbmV3UHdkOiB2YWx1ZVsnbmV3X3Bhc3N3b3JkJ10KICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgICByZXNbJ2NvZGUnXSA9PT0gMTAwMCA/IF90aGlzLiRtZXNzYWdlLnN1Y2Nlc3MocmVzWydtZXNzYWdlJ10sIDEsIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICBfdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgICAgICAgICAgbmFtZTogImxvZ2luIgogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBfdGhpcy5kZWxldGVDb29raWUoInVzZXJuYW1lIik7CiAgICAgICAgICAgIH0pIDogX3RoaXMuJG1lc3NhZ2UuZXJyb3IocmVzWydtZXNzYWdlJ10pOwogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["change.vue"],"names":[],"mappings":"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","sourcesContent":["* @Author: hao.ling\n* @Date: 2020/12/6 5:02 下午\n* @Explanation: 修改密码\n<template>\n    <div id=\"edit-change\">\n        <h1 align=\"center\">修改密码</h1>\n        <a-form :form=\"edit_form\" :label-col=\"{span:10}\" @submit=\"changePwd\">\n            <a-form-item label=\"旧密码\" class=\"edit-form-item\" style=\"margin-bottom: 5px\">\n                <a-input-password class=\"input\" size=\"small\" placeholder=\"请输入旧密码\"\n                                  v-decorator=\"['old_password',{rules:[{required:true,message:'请输入旧密码'}]}]\">\n                    <my-icon slot=\"prefix\" type=\"icon-password\" class=\"icon\"/>\n                </a-input-password>\n            </a-form-item>\n            <a-form-item label=\"新密码\" class=\"edit-form-item\" style=\"margin-bottom: 5px\">\n                <a-input-password class=\"input\" size=\"small\" placeholder=\"请输入新密码\"\n                                  v-decorator=\"['new_password',{rules:[{required:true,message:'请输入新密码'},{validator:setPassword}]}]\">\n                    <my-icon slot=\"prefix\" type=\"icon-password\" class=\"icon\"/>\n                </a-input-password>\n            </a-form-item>\n            <a-form-item label=\"确认新密码\" class=\"edit-form-item\" style=\"margin-bottom: 5px\">\n                <a-input-password class=\"input\" size=\"small\" placeholder=\"请确认新密码\"\n                                  v-decorator=\"['confirmNewPwd',{rules:[{required:true,message:'请确认新密码'},{validator:confirmPwd}]}]\">\n                    <my-icon slot=\"prefix\" type=\"icon-password\" class=\"icon\"/>\n                </a-input-password>\n            </a-form-item>\n            <a-form-item label=\"验证码\" class=\"new-code-form-item\" style=\"margin-bottom: 5px\">\n                <a-input size=\"small\" placeholder=\"验证码\" style=\"width: 100px;z-index: 50\"\n                         v-decorator=\"['code',{rules:[{required:true,message:'请输入验证码'},{validator:confirmCode}]}]\">\n                    <my-icon slot=\"prefix\" type=\"icon-yanzhengma\" class=\"icon\"/>\n                </a-input>\n                <div @click=\"refreshCode\" style=\"margin-left: 530px;margin-top: -40px;width: 120px\">\n                    <verification-code :identifyCode=\"identifyCode\" style=\"cursor: pointer\"/>\n                </div>\n            </a-form-item>\n            <a-button type=\"primary\" class=\"btn\" style=\"margin-left: 420px\">\n                <router-link :to=\"{name:'home'}\">取消</router-link>\n            </a-button>\n            <a-button type=\"primary\" class=\"btn\" @click=\"changePwd\">修改密码</a-button>\n        </a-form>\n    </div>\n</template>\n\n<script>\n    import VerificationCode from \"../index/verificationCode\";\n\n    export default {\n        name: \"change\",\n        components: {VerificationCode},\n        data() {\n            return {\n                edit_form: this.$form.createForm(this, {name: \"editForm\"}),\n                identifyCode: \"\",\n                identifyCodes: \"1234567890abcdefghijklmnopqrstuvwxyz\",\n            }\n        },\n        mounted() {\n            this.identifyCode = \"\"\n            this.makeCode(this.identifyCodes, 4)\n        },\n        methods: {\n            // 获取密码\n            setPassword(rules, value, callback) {\n                this.password = value\n                callback()\n            },\n            // 校验两次密码\n            confirmPwd(rules, value, callback) {\n                value && this.password !== value ? callback(\"两次密码不一致\") : callback()\n            },\n            // 校验图形验证码\n            confirmCode(rules, value, callback) {\n                value && this.identifyCode !== value ? callback(\"验证码错误\") : callback()\n            },\n            // 刷新图形验证码\n            refreshCode() {\n                this.identifyCode = \"\"\n                this.makeCode(this.identifyCodes, 4)\n            },\n            // 生成随机数\n            randomNum(min, max) {\n                max = max + 1\n                return Math.floor(Math.random() * (max - min) + min)\n            },\n            // 生成随机图形验证码\n            makeCode(data, len) {\n                for (let i = 0; i < len; i++) {\n                    this.identifyCode += data[this.randomNum(0, data.length - 1)]\n                }\n            },\n            // 修改密码\n            changePwd(e) {\n                e.preventDefault()\n                this.edit_form.validateFields((err, value) => {\n                    if (!err) {\n                        this.Post(\"/changePwd\", {\n                            username: this.getCookie(\"username\"),\n                            oldPwd: value['old_password'], newPwd: value['new_password']\n                        }).then(res => {\n                            res['code'] === 1000 ? this.$message.success(res['message'], 1, () => {\n                                this.$router.push({name: \"login\"})\n                                this.deleteCookie(\"username\")\n                            }) : this.$message.error(res['message'])\n                        })\n                    }\n                })\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    #edit-change {\n        margin-top: 50px;\n    }\n\n    .input {\n        width: 200px;\n    }\n\n    .btn {\n        margin-top: 20px;\n        margin-right: 50px;\n    }\n</style>\n<style>\n    .edit-form-item .ant-form-explain {\n        margin-bottom: -20px;\n        margin-left: 450px;\n    }\n\n    .new-code-form-item .ant-form-explain {\n        margin-top: -30px;\n        z-index: 50;\n        margin-left: 450px;\n    }\n</style>"],"sourceRoot":"src/views/home"}]}