{"remainingRequest":"/Users/linghao/Documents/myvue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/linghao/Documents/myvue/src/views/index/verificationCode.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/linghao/Documents/myvue/src/views/index/verificationCode.vue","mtime":1607236238679},{"path":"/Users/linghao/Documents/myvue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/linghao/Documents/myvue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/linghao/Documents/myvue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/linghao/Documents/myvue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICJ2ZXJpZmljYXRpb25Db2RlIiwKICAgIHByb3BzOiB7CiAgICAgICAgLy8g6aqM6K+B56CBCiAgICAgICAgaWRlbnRpZnlDb2RlOiB7CiAgICAgICAgICAgIHR5cGU6IFN0cmluZywKICAgICAgICAgICAgZGVmYXVsdDogIjEyMzQiCiAgICAgICAgfSwKICAgICAgICAvLyDlrZfkvZPmnIDlsI/lgLwKICAgICAgICBmb250U2l6ZU1pbjogewogICAgICAgICAgICB0eXBlOiBOdW1iZXIsCiAgICAgICAgICAgIGRlZmF1bHQ6IDM1CiAgICAgICAgfSwKICAgICAgICAvLyDlrZfkvZPmnIDlpKflgLwKICAgICAgICBmb250U2l6ZU1heDogewogICAgICAgICAgICB0eXBlOiBOdW1iZXIsCiAgICAgICAgICAgIGRlZmF1bHQ6IDM1CiAgICAgICAgfSwKICAgICAgICAvLyDog4zmma/oibLmnIDlsI/lgLwKICAgICAgICBiYWNrZ3JvdW5kQ29sb3JNaW46IHsKICAgICAgICAgICAgdHlwZTogTnVtYmVyLAogICAgICAgICAgICBkZWZhdWx0OiAxODAKICAgICAgICB9LAogICAgICAgIC8vIOiDjOaZr+iJsuacgOWkp+WAvAogICAgICAgIGJhY2tncm91bmRDb2xvck1heDogewogICAgICAgICAgICB0eXBlOiBOdW1iZXIsCiAgICAgICAgICAgIGRlZmF1bHQ6IDI0MAogICAgICAgIH0sCiAgICAgICAgLy8g6aKc6Imy5pyA5bCP5YC8CiAgICAgICAgY29sb3JNaW46IHsKICAgICAgICAgICAgdHlwZTogTnVtYmVyLAogICAgICAgICAgICBkZWZhdWx0OiA1MAogICAgICAgIH0sCiAgICAgICAgLy8g6aKc6Imy5pyA5aSn5YC8CiAgICAgICAgY29sb3JNYXg6IHsKICAgICAgICAgICAgdHlwZTogTnVtYmVyLAogICAgICAgICAgICBkZWZhdWx0OiAxNjAKICAgICAgICB9LAogICAgICAgIC8vIOihjOminOiJsuacgOWwj+WAvAogICAgICAgIGxpbmVDb2xvck1pbjogewogICAgICAgICAgICB0eXBlOiBOdW1iZXIsCiAgICAgICAgICAgIGRlZmF1bHQ6IDEwMAogICAgICAgIH0sCiAgICAgICAgLy8g6KGM6aKc6Imy5pyA5aSn5YC8CiAgICAgICAgbGluZUNvbG9yTWF4OiB7CiAgICAgICAgICAgIHR5cGU6IE51bWJlciwKICAgICAgICAgICAgZGVmYXVsdDogMjAwCiAgICAgICAgfSwKICAgICAgICAvLyDngrnpopzoibLmnIDlsI/lgLwKICAgICAgICBkb3RDb2xvck1pbjogewogICAgICAgICAgICB0eXBlOiBOdW1iZXIsCiAgICAgICAgICAgIGRlZmF1bHQ6IDAKICAgICAgICB9LAogICAgICAgIC8vIOeCueminOiJsuacgOWkp+WAvAogICAgICAgIGRvdENvbG9yTWF4OiB7CiAgICAgICAgICAgIHR5cGU6IE51bWJlciwKICAgICAgICAgICAgZGVmYXVsdDogMjU1CiAgICAgICAgfSwKICAgICAgICAvLyDlrr3luqYKICAgICAgICBjb250ZW50V2lkdGg6IHsKICAgICAgICAgICAgdHlwZTogTnVtYmVyLAogICAgICAgICAgICBkZWZhdWx0OiAxMjAKICAgICAgICB9LAogICAgICAgIC8vIOmrmOW6pgogICAgICAgIGNvbnRlbnRIZWlnaHQ6IHsKICAgICAgICAgICAgdHlwZTogTnVtYmVyLAogICAgICAgICAgICBkZWZhdWx0OiA0MAogICAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgLy8g55Sf5oiQ6ZqP5py65pWwCiAgICAgICAgcmFuZG9tTnVtKG1pbiwgbWF4KSB7CiAgICAgICAgICAgIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluKSArIG1pbikKICAgICAgICB9LAogICAgICAgIC8vIOeUn+aIkOmaj+acuuminOiJsgogICAgICAgIHJhbmRvbUNvbG9yKG1pbiwgbWFYKSB7CiAgICAgICAgICAgIGxldCByID0gdGhpcy5yYW5kb21OdW0obWluLCBtYVgpCiAgICAgICAgICAgIGxldCBnID0gdGhpcy5yYW5kb21OdW0obWluLCBtYVgpCiAgICAgICAgICAgIGxldCBiID0gdGhpcy5yYW5kb21OdW0obWluLCBtYVgpCiAgICAgICAgICAgIHJldHVybiAicmdiKCIgKyByICsgIiwiICsgZyArICIsIiArIGIgKyAiKSIKICAgICAgICB9LAogICAgICAgIC8vIOmAj+aYjuW6pgogICAgICAgIHRyYW5zcGFyZW50KCkgewogICAgICAgICAgICByZXR1cm4gInJnYigyNTUsMjU1LDI1NSkiCiAgICAgICAgfSwKICAgICAgICAvLyDnu5jliLblm77niYcKICAgICAgICBkcmF3UGljKCkgewogICAgICAgICAgICBsZXQgY2FudmFzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInMtY2FudmFzIikKICAgICAgICAgICAgbGV0IGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KCIyZCIpCiAgICAgICAgICAgIGN0eC50ZXh0QmFzZWxpbmUgPSAiYm90dG9tIgogICAgICAgICAgICBjdHguZmlsbFN0eWxlID0gdGhpcy50cmFuc3BhcmVudCgpCiAgICAgICAgICAgIGN0eC5maWxsUmVjdCgwLCAwLCB0aGlzLmNvbnRlbnRXaWR0aCwgdGhpcy5jb250ZW50SGVpZ2h0KQogICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuaWRlbnRpZnlDb2RlLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgICAgICB0aGlzLmRyYXdUZXh0KGN0eCwgdGhpcy5pZGVudGlmeUNvZGVbaV0sIGkpCiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGhpcy5kcmF3TGluZShjdHgpCiAgICAgICAgICAgIHRoaXMuZHJhd0RvdChjdHgpCiAgICAgICAgfSwKICAgICAgICAvLyDnu5jliLbmloflrZcKICAgICAgICBkcmF3VGV4dChjdHgsIHR4dCwgaSkgewogICAgICAgICAgICBjdHguZmlsbFN0eWxlID0gdGhpcy5yYW5kb21Db2xvcih0aGlzLmNvbG9yTWluLCB0aGlzLmNvbG9yTWF4KQogICAgICAgICAgICBjdHguZm9udCA9IHRoaXMucmFuZG9tTnVtKHRoaXMuZm9udFNpemVNaW4sIHRoaXMuZm9udFNpemVNYXgpICsgInB4IFNpbUhlaSIKICAgICAgICAgICAgbGV0IHggPSAoaSArIDEpICogKHRoaXMuY29udGVudFdpZHRoIC8gKHRoaXMuaWRlbnRpZnlDb2RlLmxlbmd0aCArIDEpKQogICAgICAgICAgICBsZXQgeSA9IHRoaXMucmFuZG9tTnVtKHRoaXMuZm9udFNpemVNYXgsIHRoaXMuY29udGVudEhlaWdodCAtIDUpCiAgICAgICAgICAgIGNvbnN0IGRlZyA9IHRoaXMucmFuZG9tTnVtKC0xMCwgMTApCiAgICAgICAgICAgIGN0eC50cmFuc2xhdGUoeCwgeSkKICAgICAgICAgICAgY3R4LnJvdGF0ZSgoZGVnICogTWF0aC5QSSkgLyAxODApCiAgICAgICAgICAgIGN0eC5maWxsVGV4dCh0eHQsIDAsIDApCiAgICAgICAgICAgIGN0eC5yb3RhdGUoKC1kZWcgKiBNYXRoLlBJKSAvIDE4MCkKICAgICAgICAgICAgY3R4LnRyYW5zbGF0ZSgteCwgLXkpCiAgICAgICAgfSwKICAgICAgICAvLyDnu5jliLbooYwKICAgICAgICBkcmF3TGluZShjdHgpIHsKICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCA4OyBpKyspIHsKICAgICAgICAgICAgICAgIGN0eC5maWxsU3R5bGUgPSB0aGlzLnJhbmRvbUNvbG9yKHRoaXMubGluZUNvbG9yTWluLCB0aGlzLmxpbmVDb2xvck1heCkKICAgICAgICAgICAgICAgIGN0eC5iZWdpblBhdGgoKQogICAgICAgICAgICAgICAgY3R4Lm1vdmVUbyh0aGlzLnJhbmRvbU51bSgwLCB0aGlzLmNvbnRlbnRXaWR0aCksIHRoaXMucmFuZG9tTnVtKDAsIHRoaXMuY29udGVudEhlaWdodCkpCiAgICAgICAgICAgICAgICBjdHgubGluZVRvKHRoaXMucmFuZG9tTnVtKDAsIHRoaXMuY29udGVudFdpZHRoKSwgdGhpcy5yYW5kb21OdW0oMCwgdGhpcy5jb250ZW50SGVpZ2h0KSkKICAgICAgICAgICAgICAgIGN0eC5zdHJva2UoKQogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICAvLyDnu5jliLbngrkKICAgICAgICBkcmF3RG90KGN0eCkgewogICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDEwMDsgaSsrKSB7CiAgICAgICAgICAgICAgICBjdHguZmlsbFN0eWxlID0gdGhpcy5yYW5kb21Db2xvcigwLCAyNTUpCiAgICAgICAgICAgICAgICBjdHguYmVnaW5QYXRoKCkKICAgICAgICAgICAgICAgIGN0eC5hcmModGhpcy5yYW5kb21OdW0oMCwgdGhpcy5jb250ZW50V2lkdGgpLCB0aGlzLnJhbmRvbU51bSgwLCB0aGlzLmNvbnRlbnRIZWlnaHQpLCAxLCAwLCAyICogTWF0aC5QSSkKICAgICAgICAgICAgICAgIGN0eC5maWxsKCkKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0sCiAgICB3YXRjaDogewogICAgICAgIGlkZW50aWZ5Q29kZSgpIHsKICAgICAgICAgICAgdGhpcy5kcmF3UGljKCkKICAgICAgICB9CiAgICB9LAogICAgbW91bnRlZCgpIHsKICAgICAgICB0aGlzLmRyYXdQaWMoKQogICAgfQp9Cg=="},{"version":3,"sources":["verificationCode.vue"],"names":[],"mappingsfile":"verificationCode.vue","sourceRoot":"src/views/index","sourcesContent":["* @Author: hao.ling\n* @Date: 2020/12/6 2:30 下午\n* @Explanation: 验证码\n<template>\n    <div class=\"s-canvas\">\n        <canvas id=\"s-canvas\" :width=\"contentWidth\" :height=\"contentHeight\"/>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: \"verificationCode\",\n        props: {\n            // 验证码\n            identifyCode: {\n                type: String,\n                default: \"1234\"\n            },\n            // 字体最小值\n            fontSizeMin: {\n                type: Number,\n                default: 35\n            },\n            // 字体最大值\n            fontSizeMax: {\n                type: Number,\n                default: 35\n            },\n            // 背景色最小值\n            backgroundColorMin: {\n                type: Number,\n                default: 180\n            },\n            // 背景色最大值\n            backgroundColorMax: {\n                type: Number,\n                default: 240\n            },\n            // 颜色最小值\n            colorMin: {\n                type: Number,\n                default: 50\n            },\n            // 颜色最大值\n            colorMax: {\n                type: Number,\n                default: 160\n            },\n            // 行颜色最小值\n            lineColorMin: {\n                type: Number,\n                default: 100\n            },\n            // 行颜色最大值\n            lineColorMax: {\n                type: Number,\n                default: 200\n            },\n            // 点颜色最小值\n            dotColorMin: {\n                type: Number,\n                default: 0\n            },\n            // 点颜色最大值\n            dotColorMax: {\n                type: Number,\n                default: 255\n            },\n            // 宽度\n            contentWidth: {\n                type: Number,\n                default: 120\n            },\n            // 高度\n            contentHeight: {\n                type: Number,\n                default: 40\n            }\n        },\n        methods: {\n            // 生成随机数\n            randomNum(min, max) {\n                return Math.floor(Math.random() * (max - min) + min)\n            },\n            // 生成随机颜色\n            randomColor(min, maX) {\n                let r = this.randomNum(min, maX)\n                let g = this.randomNum(min, maX)\n                let b = this.randomNum(min, maX)\n                return \"rgb(\" + r + \",\" + g + \",\" + b + \")\"\n            },\n            // 透明度\n            transparent() {\n                return \"rgb(255,255,255)\"\n            },\n            // 绘制图片\n            drawPic() {\n                let canvas = document.getElementById(\"s-canvas\")\n                let ctx = canvas.getContext(\"2d\")\n                ctx.textBaseline = \"bottom\"\n                ctx.fillStyle = this.transparent()\n                ctx.fillRect(0, 0, this.contentWidth, this.contentHeight)\n                for (let i = 0; i < this.identifyCode.length; i++) {\n                    this.drawText(ctx, this.identifyCode[i], i)\n                }\n                this.drawLine(ctx)\n                this.drawDot(ctx)\n            },\n            // 绘制文字\n            drawText(ctx, txt, i) {\n                ctx.fillStyle = this.randomColor(this.colorMin, this.colorMax)\n                ctx.font = this.randomNum(this.fontSizeMin, this.fontSizeMax) + \"px SimHei\"\n                let x = (i + 1) * (this.contentWidth / (this.identifyCode.length + 1))\n                let y = this.randomNum(this.fontSizeMax, this.contentHeight - 5)\n                const deg = this.randomNum(-10, 10)\n                ctx.translate(x, y)\n                ctx.rotate((deg * Math.PI) / 180)\n                ctx.fillText(txt, 0, 0)\n                ctx.rotate((-deg * Math.PI) / 180)\n                ctx.translate(-x, -y)\n            },\n            // 绘制行\n            drawLine(ctx) {\n                for (let i = 0; i < 8; i++) {\n                    ctx.fillStyle = this.randomColor(this.lineColorMin, this.lineColorMax)\n                    ctx.beginPath()\n                    ctx.moveTo(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight))\n                    ctx.lineTo(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight))\n                    ctx.stroke()\n                }\n            },\n            // 绘制点\n            drawDot(ctx) {\n                for (let i = 0; i < 100; i++) {\n                    ctx.fillStyle = this.randomColor(0, 255)\n                    ctx.beginPath()\n                    ctx.arc(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight), 1, 0, 2 * Math.PI)\n                    ctx.fill()\n                }\n            }\n        },\n        watch: {\n            identifyCode() {\n                this.drawPic()\n            }\n        },\n        mounted() {\n            this.drawPic()\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>"]}]}