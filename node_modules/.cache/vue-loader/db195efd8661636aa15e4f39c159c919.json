{"remainingRequest":"/Users/linghao/Documents/myvue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/linghao/Documents/myvue/src/views/index/register.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/linghao/Documents/myvue/src/views/index/register.vue","mtime":1610172479978},{"path":"/Users/linghao/Documents/myvue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/linghao/Documents/myvue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/linghao/Documents/myvue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/linghao/Documents/myvue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBWZXJpZmljYXRpb25Db2RlIGZyb20gIi4vdmVyaWZpY2F0aW9uQ29kZSI7CgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAicmVnaXN0ZXIiLAogICAgY29tcG9uZW50czoge1ZlcmlmaWNhdGlvbkNvZGV9LAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICByZWdpc3RlckZvcm06IHRoaXMuJGZvcm0uY3JlYXRlRm9ybSh0aGlzLCB7bmFtZTogInJlZ2lzdGVyX2Zvcm0ifSksCiAgICAgICAgICAgIHBhc3N3b3JkOiAiIiwKICAgICAgICAgICAgaWRlbnRpZnlDb2RlOiAiIiwKICAgICAgICAgICAgaWRlbnRpZnlDb2RlczogIjEyMzQ1Njc4OTBhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5eiIsCiAgICAgICAgICAgIGRpc2FibGU6IGZhbHNlCiAgICAgICAgfQogICAgfSwKICAgIG1vdW50ZWQoKSB7CiAgICAgICAgdGhpcy5pZGVudGlmeUNvZGUgPSAiIgogICAgICAgIHRoaXMubWFrZUNvZGUodGhpcy5pZGVudGlmeUNvZGVzLCA0KQogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICAvLyDms6jlhowKICAgICAgICByZWdpc3RlcihlKSB7CiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKQogICAgICAgICAgICB0aGlzLnJlZ2lzdGVyRm9ybS52YWxpZGF0ZUZpZWxkcygoZXJyLCB2YWx1ZXMpID0+IHsKICAgICAgICAgICAgICAgIGlmICghZXJyKSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5Qb3N0KCIvcmVnaXN0ZXIiLCB7CiAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJuYW1lOiB2YWx1ZXNbJ3VzZXJuYW1lJ10sCiAgICAgICAgICAgICAgICAgICAgICAgIHBhc3N3b3JkOiB2YWx1ZXNbJ3Bhc3N3b3JkJ10KICAgICAgICAgICAgICAgICAgICB9KS50aGVuKHJlcyA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgIHJlc1snY29kZSddID09PSAxMDAwID8gdGhpcy4kbWVzc2FnZS5zdWNjZXNzKHJlc1sibWVzc2FnZSJdLCAxLCAoKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7bmFtZTogImxvZ2luIn0pCiAgICAgICAgICAgICAgICAgICAgICAgIH0pIDogdGhpcy4kbWVzc2FnZS5lcnJvcihyZXNbJ21lc3NhZ2UnXSkKICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KQogICAgICAgIH0sCiAgICAgICAgLy8g6I635Y+W5a+G56CBCiAgICAgICAgc2V0UGFzc3dvcmQocnVsZXMsIHZhbHVlLCBjYWxsYmFjaykgewogICAgICAgICAgICB0aGlzLnBhc3N3b3JkID0gdmFsdWUKICAgICAgICAgICAgY2FsbGJhY2soKQogICAgICAgIH0sCiAgICAgICAgLy8g5qCh6aqM5Lik5qyh5a+G56CBCiAgICAgICAgY29uZmlybVB3ZChydWxlcywgdmFsdWUsIGNhbGxiYWNrKSB7CiAgICAgICAgICAgIHZhbHVlICYmIHRoaXMucGFzc3dvcmQgIT09IHZhbHVlID8gY2FsbGJhY2soIuS4pOasoeWvhueggeS4jeS4gOiHtCIpIDogY2FsbGJhY2soKQogICAgICAgIH0sCiAgICAgICAgLy8g5qCh6aqM5Zu+5b2i6aqM6K+B56CBCiAgICAgICAgY29uZmlybUNvZGUocnVsZXMsIHZhbHVlLCBjYWxsYmFjaykgewogICAgICAgICAgICB2YWx1ZSAmJiB0aGlzLmlkZW50aWZ5Q29kZSAhPT0gdmFsdWUgPyBjYWxsYmFjaygi6aqM6K+B56CB6ZSZ6K+vIikgOiBjYWxsYmFjaygpCiAgICAgICAgfSwKICAgICAgICAvLyDliLfmlrDlm77lvaLpqozor4HnoIEKICAgICAgICByZWZyZXNoQ29kZSgpIHsKICAgICAgICAgICAgdGhpcy5pZGVudGlmeUNvZGUgPSAiIgogICAgICAgICAgICB0aGlzLm1ha2VDb2RlKHRoaXMuaWRlbnRpZnlDb2RlcywgNCkKICAgICAgICB9LAogICAgICAgIC8vIOeUn+aIkOmaj+acuuaVsAogICAgICAgIHJhbmRvbU51bShtaW4sIG1heCkgewogICAgICAgICAgICBtYXggPSBtYXggKyAxCiAgICAgICAgICAgIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluKSArIG1pbikKICAgICAgICB9LAogICAgICAgIC8vIOeUn+aIkOmaj+acuuWbvuW9oumqjOivgeeggQogICAgICAgIG1ha2VDb2RlKGRhdGEsIGxlbikgewogICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbjsgaSsrKSB7CiAgICAgICAgICAgICAgICB0aGlzLmlkZW50aWZ5Q29kZSArPSBkYXRhW3RoaXMucmFuZG9tTnVtKDAsIGRhdGEubGVuZ3RoIC0gMSldCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9Cn0K"},{"version":3,"sources":["register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"register.vue","sourceRoot":"src/views/index","sourcesContent":["* @Author: hao.ling\n* @Date: 2020/12/6 2:29 下午\n* @Explanation: 注册页\n<template>\n    <div id=\"register\">\n        <h1 align=\"center\">注册</h1>\n        <a-form :form=\"registerForm\" @submit=\"register\" :labelCol=\"{span:7}\">\n            <a-form-item label=\"用户名\" class=\"register-form-item\" style=\"margin-bottom: 5px\">\n                <a-input class=\"input\" placeholder=\"请输入用户名\" size=\"small\"\n                         v-decorator=\"['username',{rules:[{required:true,message:'请输入用户名'}]}]\">\n                    <my-icon slot=\"prefix\" type=\"icon-user\" class=\"icon\"/>\n                </a-input>\n            </a-form-item>\n            <a-form-item label=\"密码\" class=\"register-form-item\" style=\"margin-bottom: 5px\">\n                <a-input-password class=\"input\" placeholder=\"请输入密码\" size=\"small\"\n                                  v-decorator=\"['password',{rules:[{required:true,message:'请输入密码'},{validator:setPassword}]}]\">\n                    <my-icon slot=\"prefix\" type=\"icon-password\" class=\"icon\"/>\n                </a-input-password>\n            </a-form-item>\n            <a-form-item label=\"确认密码\" class=\"register-form-item\" style=\"margin-bottom: 5px\">\n                <a-input-password class=\"input\" size=\"small\" placeholder=\"请确认密码\"\n                                  v-decorator=\"['confirmPwd',{rules:[{required:true,message:'请确认密码'},{validator:confirmPwd}]}]\">\n                    <my-icon slot=\"prefix\" type=\"icon-password\" class=\"icon\"/>\n                </a-input-password>\n            </a-form-item>\n            <a-form-item label=\"验证码\" class=\"code-form-item\" style=\"margin-bottom: 5px\">\n                <a-input size=\"small\" placeholder=\"验证码\" style=\"width: 100px;z-index: 50\"\n                         v-decorator=\"['code',{rules:[{required:true,message:'请输入验证码'},{validator:confirmCode}]}]\">\n                    <my-icon slot=\"prefix\" type=\"icon-yanzhengma\" class=\"icon\"/>\n                </a-input>\n                <div @click=\"refreshCode\" style=\"margin-left: 210px;margin-top: -40px;width: 120px;margin-right: 220px\">\n                    <verification-code :identifyCode=\"identifyCode\" style=\"cursor: pointer\"/>\n                </div>\n            </a-form-item>\n            <a-button type=\"primary\" class=\"btn\" style=\"margin-left: 120px\" :disabled=\"disable\">\n                <router-link :to=\"{name:'login'}\">登录</router-link>\n            </a-button>\n            <a-button type=\"primary\" class=\"btn\" @click=\"register\" :disabled=\"disable\">注册</a-button>\n        </a-form>\n    </div>\n</template>\n\n<script>\n    import VerificationCode from \"./verificationCode\";\n\n    export default {\n        name: \"register\",\n        components: {VerificationCode},\n        data() {\n            return {\n                registerForm: this.$form.createForm(this, {name: \"register_form\"}),\n                password: \"\",\n                identifyCode: \"\",\n                identifyCodes: \"1234567890abcdefghijklmnopqrstuvwxyz\",\n                disable: false\n            }\n        },\n        mounted() {\n            this.identifyCode = \"\"\n            this.makeCode(this.identifyCodes, 4)\n        },\n        methods: {\n            // 注册\n            register(e) {\n                e.preventDefault()\n                this.registerForm.validateFields((err, values) => {\n                    if (!err) {\n                        this.Post(\"/register\", {\n                            username: values['username'],\n                            password: values['password']\n                        }).then(res => {\n                            res['code'] === 1000 ? this.$message.success(res[\"message\"], 1, () => {\n                                this.$router.push({name: \"login\"})\n                            }) : this.$message.error(res['message'])\n                        })\n                    }\n                })\n            },\n            // 获取密码\n            setPassword(rules, value, callback) {\n                this.password = value\n                callback()\n            },\n            // 校验两次密码\n            confirmPwd(rules, value, callback) {\n                value && this.password !== value ? callback(\"两次密码不一致\") : callback()\n            },\n            // 校验图形验证码\n            confirmCode(rules, value, callback) {\n                value && this.identifyCode !== value ? callback(\"验证码错误\") : callback()\n            },\n            // 刷新图形验证码\n            refreshCode() {\n                this.identifyCode = \"\"\n                this.makeCode(this.identifyCodes, 4)\n            },\n            // 生成随机数\n            randomNum(min, max) {\n                max = max + 1\n                return Math.floor(Math.random() * (max - min) + min)\n            },\n            // 生成随机图形验证码\n            makeCode(data, len) {\n                for (let i = 0; i < len; i++) {\n                    this.identifyCode += data[this.randomNum(0, data.length - 1)]\n                }\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    #register {\n        margin-top: 120px;\n        margin-left: 500px;\n        padding-top: 20px;\n        height: 350px;\n        width: 420px;\n        background-color: white;\n        border-radius: 20px;\n    }\n\n    .input {\n        width: 200px;\n    }\n\n    .icon {\n        margin-left: -2px;\n        font-size: 16px;\n    }\n\n    .btn {\n        margin-top: 10px;\n        margin-right: 30px;\n    }\n</style>\n<style>\n    .register-form-item .ant-form-explain {\n        margin-bottom: -20px;\n        margin-left: 125px;\n    }\n\n    .code-form-item .ant-form-explain {\n        margin-left: 125px;\n        margin-top: -30px;\n        z-index: 50;\n    }\n</style>"]}]}