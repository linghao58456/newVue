{"remainingRequest":"/Users/linghao/Documents/myvue/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/linghao/Documents/myvue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/linghao/Documents/myvue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/linghao/Documents/myvue/src/views/index/register.vue?vue&type=template&id=c652b04c&scoped=true&","dependencies":[{"path":"/Users/linghao/Documents/myvue/src/views/index/register.vue","mtime":1610172479978},{"path":"/Users/linghao/Documents/myvue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/linghao/Documents/myvue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/linghao/Documents/myvue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/linghao/Documents/myvue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}