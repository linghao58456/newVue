{"remainingRequest":"/Users/linghao/Documents/myvue/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/linghao/Documents/myvue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/linghao/Documents/myvue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/linghao/Documents/myvue/src/views/home/change.vue?vue&type=template&id=283986b6&scoped=true&","dependencies":[{"path":"/Users/linghao/Documents/myvue/src/views/home/change.vue","mtime":1607252576112},{"path":"/Users/linghao/Documents/myvue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/linghao/Documents/myvue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/linghao/Documents/myvue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/linghao/Documents/myvue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}